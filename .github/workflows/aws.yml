name: Docker Build and Push

on:
  push:
    branches:
      - master
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: jadra.api
  ECS_SERVICE: jadra_service
  ECS_CLUSTER: jadra_cluster
  ECS_TASK_DEFINITION: jadra-api-task-def
  IMAGE_WEBAPP: jadra.api
  IMAGE_WORKER: jadra.worker 
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build and Push to DockerHub & AWS ECR
      env:
       IMAGE_TAG: ${{ github.sha }}
      run: |
        docker-compose build
        docker-compose push docker.api
        docker-compose push projectmanagement.worker

        # Setting ECR image names
        export ECR_IMAGE_WEBAPP=${{ secrets.ECR_REGISTRY_FOR_API }}/$ECR_REPOSITORY:${{env.IMAGE_WEBAPP}}-v1
        export ECR_IMAGE_WORKER=${{ secrets.ECR_REGISTRY_FOR_WORKER }}/$ECR_REPOSITORY:${{env.IMAGE_WORKER}}-v1

        # Tagging images for ECR
        docker tag $DOCKER_USERNAME/jadra.api:latest $ECR_IMAGE_WEBAPP
        docker tag $DOCKER_USERNAME/jadra.worker:latest $ECR_IMAGE_WORKER

        # Pushing to ECR
        docker push $ECR_IMAGE_WEBAPP
        docker push $ECR_IMAGE_WORKER
